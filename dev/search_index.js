var documenterSearchIndex = {"docs":
[{"location":"api/#Developer-Documentation","page":"API","title":"Developer Documentation","text":"","category":"section"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [GeMotion]\nPrivate = true\nOrder   = [:function, :type]","category":"page"},{"location":"api/#GeMotion.plot_all_unitsquare2-NTuple{6, Any}","page":"API","title":"GeMotion.plot_all_unitsquare2","text":"plot_all_unitsquare2(psih, Th, uh, model, name, levels)\n\nTBW\n\n\n\n\n\n","category":"method"},{"location":"api/#GeMotion.simulate3-Tuple{}","page":"API","title":"GeMotion.simulate3","text":"simulate(;name=\"sim\",Pr=1.0,Ra=1.0,n=1.0,model=CartesianDiscreteModel((0, 1, 0, 1), (20, 20)),nlsolver_opts=(;show_trace=true,method=:newton,linesearch=BackTracking(),ftol=1E-8,xtol=1E-10),T_diri_tags=[\"leftline\",\"rightline\",\"botleftpoint\",\"botrightpoint\",\"topleftpoint\",\"toprightpoint\"],T_diri_expressions=[0.0,1.0,0.0,1.0,0.0,1.0])\n\nSimulate the flow in a square cavity with a moving lid and a temperature gradient.\n\nArguments\n\nname::String: Name of the simulation.\nPr::Float64: Prandtl number.\nRa::Float64: Rayleigh number.\nn::Float64: Power of the viscosity.\nmodel::DiscreteModel: Number of elements in each direction.\nnlsolver_opts::Dict: Options for the nonlinear solver.\nT_diri_tags::Array{String}: Tags for the Dirichlet boundary conditions for the temperature.\nT_diri_expressions::Array{Float64}: Expressions for the Dirichlet boundary conditions for the temperature.\n\nReturns\n\nuh::FEFunction: Velocity field.\nph::FEFunction: Pressure field.\nTh::FEFunction: Temperature field.\npsih::FEFunction: Stream function.\nNu::Interpolable: Nusselt number.\nSth::FEFunction: Local heat entropy.\nSfl::FEFunction: Local fluid entropy.\nbtrian::BoundaryTriangulation: Boundary triangulation.\nmodel::CartesianDiscreteModel: Model.\nΩₕ::Triangulation: Triangulation.\nPr::Float64: Prandtl number.\nRa::Float64: Rayleigh number.\n\nExample\n\nsimulate(;name=\"sim\",Pr=1.0,Ra=1.0,n=1.0,model=CartesianDiscreteModel((0, 1, 0, 1), (20, 20)),nlsolver_opts=(;show_trace=true,method=:newton,linesearch=BackTracking(),ftol=1E-8,xtol=1E-10),T_diri_tags=[\"leftline\",\"rightline\",\"botleftpoint\",\"botrightpoint\",\"topleftpoint\",\"toprightpoint\"],T_diri_expressions=[0.0,1.0,0.0,1.0,0.0,1.0])\n\n\n\n\n\n","category":"method"},{"location":"api/#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Markdown\n# Read the README.md file as a string\nreadme = read(\"../../README.md\", String)\n\n# Find the position of the first '# GeMotion.jl' character (first headline)\npos = findfirst(r\"# GeMotion.jl\", readme)[1]\n\n# Check if a '# GeMotion.jl' was found\nif isnothing(pos)\n    error(\"No '# GeMotion.jl' found in README.md\")\nend\n\nprint(readme)\nprint(pos)\n\n# Extract the content from the first headline onward\nreadme_content = readme[pos:end]\n\n# Parse the extracted content as Markdown and include it\nMarkdown.parse(readme_content)","category":"page"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"See API reference","category":"page"}]
}
